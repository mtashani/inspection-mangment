name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend-v2/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend-v2
      run: npm ci
    
    - name: Run type check
      working-directory: ./frontend-v2
      run: npm run type-check
    
    - name: Run linter
      working-directory: ./frontend-v2
      run: npm run lint
    
    - name: Check code formatting
      working-directory: ./frontend-v2
      run: npm run format:check
    
    - name: Run unit tests
      working-directory: ./frontend-v2
      run: npm run test:ci
    
    - name: Build application
      working-directory: ./frontend-v2
      run: npm run build
    
    - name: Install Playwright Browsers
      working-directory: ./frontend-v2
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      working-directory: ./frontend-v2
      run: npm run test:e2e
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend-v2/playwright-report/
        retention-days: 30

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend-v2
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/inspection-frontend-v2:latest
          ${{ secrets.DOCKER_USERNAME }}/inspection-frontend-v2:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max